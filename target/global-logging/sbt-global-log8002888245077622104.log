[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.3 (Oracle Corporation Java 1.8.0_361)
[debug]       Load.loadUnit: plugins took 82.385833ms
[debug]       Load.loadUnit: defsScala took 0.752792ms
[debug] [Loading] Scanning directory /Users/shalu/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/shalu/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.190916 ms
[debug]           Load.resolveProject(global-plugins) took 38.396125ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/shalu/.sbt/1.0/plugins, plugins: List(<none>))) took 79.876791ms
[debug] [Loading] Done in /Users/shalu/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 102.960792ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.189ms
[debug]     Load.loadUnit(file:/Users/shalu/.sbt/1.0/plugins/, ...) took 198.571708ms
[debug]   Load.apply: load took 693.663834ms
[debug]   Load.apply: resolveProjects took 15.925542ms
[debug]   Load.apply: finalTransforms took 132.266584ms
[debug]   Load.apply: config.delegates took 8.919ms
[debug]   Load.apply: Def.make(settings)... took 969.052292ms
[debug]   Load.apply: structureIndex took 219.485584ms
[debug]   Load.apply: mkStreams took 1.257ms
[info] loading global plugins from /Users/shalu/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6504.798833ms
[debug]           Load.loadUnit: plugins took 28.95175ms
[debug]           Load.loadUnit: defsScala took 0.015166ms
[debug] [Loading] Scanning directory /Users/shalu/Documents/fpInScala/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/shalu/Documents/fpInScala/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.926875 ms
[debug]               Load.resolveProject(fpinscala-build) took 4.2645ms
[debug]             Load.loadTransitive: finalizeProject(Project(id fpinscala-build, base: /Users/shalu/Documents/fpInScala/project, plugins: List(<none>))) took 14.889833ms
[debug] [Loading] Done in /Users/shalu/Documents/fpInScala/project, returning: (fpinscala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 25.664959ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.149958ms
[debug]         Load.loadUnit(file:/Users/shalu/Documents/fpInScala/project/, ...) took 56.859667ms
[debug]       Load.apply: load took 63.837292ms
[debug]       Load.apply: resolveProjects took 1.475875ms
[debug]       Load.apply: finalTransforms took 24.163875ms
[debug]       Load.apply: config.delegates took 2.698292ms
[debug]       Load.apply: Def.make(settings)... took 364.2515ms
[debug]       Load.apply: structureIndex took 65.255791ms
[debug]       Load.apply: mkStreams took 0.002375ms
[info] loading project definition from /Users/shalu/Documents/fpInScala/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1275.175875ms
[debug]     Load.loadUnit: defsScala took 0.002708ms
[debug] [Loading] Scanning directory /Users/shalu/Documents/fpInScala
[debug]       Load.loadUnit: mkEval took 19.655792ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.851666 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 9.416667ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: /Users/shalu/Documents/fpInScala, plugins: List(<none>))) took 18.781125ms
[debug] [Loading] Done in /Users/shalu/Documents/fpInScala, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 3857.992209ms
[debug]     Load.loadUnit: cleanEvalClasses took 7.882791ms
[debug]   Load.loadUnit(file:/Users/shalu/Documents/fpInScala/, ...) took 5145.437ms
[debug] Load.apply: load took 5155.850042ms
[debug] Load.apply: resolveProjects took 0.508458ms
[debug] Load.apply: finalTransforms took 16.616375ms
[debug] Load.apply: config.delegates took 2.182708ms
[debug] Load.apply: Def.make(settings)... took 153.138292ms
[debug] Load.apply: structureIndex took 39.85275ms
[debug] Load.apply: mkStreams took 0.002ms
[info] set current project to fpInScala (in build file:/Users/shalu/Documents/fpInScala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///Users/shalu/.sbt/1.0/server/42939346345d04478177/sock
[debug] Writing bsp connection file
[info] started sbt server
